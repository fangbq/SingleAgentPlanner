(define (domain demo)
   (:types pos blocks haha)
   (:predicates (adj ?i ?j - pos ?k - haha) 
                (at ?i - pos)  
                (opened ?i - pos) 
   )
   
  (:action senseL
   :parameters ()
   :precondition (and (DK (lightOn)) 
   					  (DK (not (lightOn)))
   				 )
   :observe (lightOn)
  )    

  (:action rsright
	 :parameters()
	 :precondition (K (and (fl) (d)))
	 :effect (( (),(fl))
	          ((si, sa, sl), (sl))
			  ((ri, re, rl), (rl))
			 )
	)

  (:action knock
   :parameters ()
   :precondition (K (lightOn))
   :effect (((inRoom), (doorOpen, hasKnocked))
            ((not (inRoom)), (hasKnocked))
           )
  )
)
