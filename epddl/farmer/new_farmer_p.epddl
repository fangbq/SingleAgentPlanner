(define (problem farmer)
	(:domain farmer)
	(:objects)
	(:init (and 
	              (or 
				      (K (and (ci) (si)))
		              (K (and (wi) (si)))
		              (K (and (wi) (ci)))
		          )
	    	      (K (and 
				           (fl)
		                   (or 
						        (not(ci)) 
								(and 
								      (ce) 
									  (cl)
							     )
						    )
			                (or 
							    (not(si)) 
								(and 
								      (sa) 
									  (sl)
							    )
							)
			                (or (not(wi)) 
							    (and 
								      (wa)
									  (wl)
								)
						    )
		              ) 
		          )
		          (DK (d))
		          (DK (not (d)))
	      )
	)
	
	(:goal (K (and 
	                (or 
					     (not(ci)) 
						 (ce)
					) 
					(or
					     (not(ci))
						 (not(cl))
					) 
					(or 
					     (not(si))
						 (sa)
					) 
					(or
					     (not(si))
						 (not(sl))
				    ) 
					(or
					     (not(wi))
						 (wa)
					) 
					(or
					     (not(wi))
						 (not(wl))
					) 
				)
			)
	)
)
